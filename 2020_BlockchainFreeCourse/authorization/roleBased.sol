/// Console Cowboys Smart Contract Hacking Course
/// @author Olie Brown @ficti0n
/// http://cclabs.io 


pragma solidity ^0.6.6;
import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol";


contract roleBased is AccessControl {
    bytes32 public constant admin = keccak256("admin");
    bytes32 public constant user = keccak256("user");
    mapping (address =>uint) balances;
    
    constructor() public {
       _setupRole(admin, msg.sender);
    }
    

    function deposit() public payable{
        if (!(hasRole(admin, msg.sender))){
            _setupRole(user, msg.sender);
        }
 	    balances[msg.sender] = balances[msg.sender]+msg.value;
    }
    
    function withdraw(uint amount) public payable {
        require(hasRole(user, msg.sender), "Caller is not a user of this bank");
        require (balances[msg.sender] >= amount);
        
        msg.sender.transfer(amount);
    }
    
    function kill() public {
        require(hasRole(admin, msg.sender), "Caller is not a administrator");
        selfdestruct(msg.sender);
    }
}
