pragma solidity ^0.5.12;
 
contract Underflow{
 mapping (address =>uint) balances;
 
 function contribute() public payable{
  balances[msg.sender] = msg.value; 
 }
 
 function getBalance() view public returns (uint){
  return balances[msg.sender]; 
  
 }
 
 function transfer(address _reciever, uint _value) public payable{
  // This line requires a minimum balance of 5 wei which you can bypass with an underflow
  require(balances[msg.sender] - _value >= 5);
 
  // This line updates balance and also underflows
  balances[msg.sender] = balances[msg.sender] - _value; 
 
  //transfer value to receiver
  balances[_reciever] = balances[_reciever] + _value;
 }
}
